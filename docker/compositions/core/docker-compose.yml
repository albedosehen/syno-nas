services:
  # ===========================================
  # DOPPLER - Secrets Management Service
  # ===========================================
  doppler:
    build:
      context: ./doppler
      dockerfile: Dockerfile
    image: synology-nas/doppler-alpine:latest
    container_name: core-doppler
    restart: unless-stopped
    
    # Environment variables
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - DOPPLER_TOKEN=${DOPPLER_TOKEN}
      - DOPPLER_PROJECT=${DOPPLER_PROJECT:-core-services}
      - DOPPLER_CONFIG=${DOPPLER_CONFIG:-dev}
    
    # Health check
    healthcheck:
      test: ["CMD", "doppler", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    
    # Network configuration
    networks:
      - core-network
    
    # Labels for organization
    labels:
      - "com.synology.core.doppler.description=Secrets management service"
      - "com.synology.core.doppler.category=security"
    
    # Run as service to keep container alive for secrets sharing
    command: ["service"]

  # ===========================================
  # SURREALDB - Database Service
  # ===========================================
  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: core-surrealdb
    restart: unless-stopped
    
    # Service dependencies
    depends_on:
      doppler:
        condition: service_healthy
    
    # Environment variables
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      
    # Port mapping - local network access only
    ports:
      - "${SURREALDB_PORT:-8001}:8000"
    
    # Volume mappings optimized for Synology NAS
    volumes:
      - ${SURREALDB_DATA_PATH:-/volume1/docker/core/surrealdb/data}:/data
      - ${SURREALDB_CONFIG_PATH:-./config/surrealdb}:/config
    
    # SurrealDB command with environment-based credentials
    command: 
      - start
      - --bind
      - "0.0.0.0:8000"
      - --user
      - "${SURREALDB_USER:-admin}"
      - --pass
      - "${SURREALDB_PASS:-}"
      - file:/data/database.db
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: ${SURREALDB_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${SURREALDB_MEMORY_RESERVATION:-512M}
    
    # Network configuration
    networks:
      - core-network
    
    # Labels for organization
    labels:
      - "traefik.enable=false"
      - "com.synology.core.surrealdb.description=SurrealDB multi-model database"
      - "com.synology.core.surrealdb.category=storage"

  # ===========================================
  # PORTAINER - Container Management UI
  # ===========================================
  portainer:
    image: portainer/portainer-ce:lts
    container_name: core-portainer
    restart: unless-stopped
    
    # Service dependencies
    depends_on:
      doppler:
        condition: service_healthy
    
    # Security and local network access only
    command: -H unix:///var/run/docker.sock
    
    # Environment variables
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      
    # Port mapping - local network access only
    ports:
      - "${PORTAINER_PORT:-9000}:9000"
      - "${PORTAINER_EDGE_PORT:-8000}:8000"
    
    # Volume mappings optimized for Synology NAS
    volumes:
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Portainer data persistence
      - ${PORTAINER_DATA_PATH:-/volume1/docker/core/portainer/data}:/data
      # Docker volumes access
      - /volume1/docker:/var/lib/docker/volumes:ro
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: ${PORTAINER_MEMORY_LIMIT:-512M}
        reservations:
          memory: ${PORTAINER_MEMORY_RESERVATION:-256M}
    
    # Network configuration
    networks:
      - core-network
    
    # Labels for organization and management
    labels:
      - "traefik.enable=false"
      - "com.synology.core.portainer.description=Docker container management UI"
      - "com.synology.core.portainer.category=management"

# ===========================================
# NETWORKS
# ===========================================
networks:
  core-network:
    driver: bridge
    name: core-network
    driver_opts:
      com.docker.network.bridge.name: core-bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# ===========================================
# VOLUMES
# ===========================================
volumes:
  # Portainer data volume
  core_portainer_data:
    name: core_portainer_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PORTAINER_DATA_PATH:-/volume1/docker/core/portainer/data}
  
  # SurrealDB data volume
  core_surrealdb_data:
    name: core_surrealdb_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SURREALDB_DATA_PATH:-/volume1/docker/core/surrealdb/data}